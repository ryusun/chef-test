user  nginx;
worker_processes  2;
worker_cpu_affinity 0101 1010;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
           #stub_status on;
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

        location ~ /trade/.*\.jpg$ {

            rewrite ^/trade/(img[0-9]*)/(cars)/([0-9]*)/([0-9]*)/japan(.*)/(.*)/([0-9]*.\.jpg)$ /trade/$1/$2/$3/$4/$7;
            rewrite ^/trade/(img[0-9]*)/(cars|motorcycles)/([0-9]*)/([0-9]*)/(.*)/([0-9]*.\.jpg)$ /trade/$1/$2/$3/$4/$6;

            if ($query_string ~ .*dummy=.*) {
                break;
            }

            if ($query_string ~ .*=.*) {
              rewrite ^/trade/(.*\.jpg)$ /image_filter/$1 last;
            }
        }

        location ~ ^/image_filter/(.*\.jpg)$ {
            internal;

            set $file $1;
            set $width 150;
            set $height 150;
            set $quality 75;

            if ($arg_width ~ (\d*)) {
                set $width $1;
            }
            if ($arg_height ~ (\d*)) {
                set $height $1;
            }
            if ($arg_quality ~ (100|[1-9][0-9]|[1-9])) {
                set $quality $1;
            }

            if ($arg_type = "resize") {
                rewrite ^ /resize last;
            }

            rewrite ^ /crop last;
        }

        location /resize {
            internal;
            rewrite ^ /trade/$file break;
            image_filter  resize  $width $height;
            image_filter_jpeg_quality $quality;
            error_page 415 = @empty;
        }

        location /crop {
            internal;
            rewrite ^ /trade/$file break;
            image_filter  crop  $width $height;
            image_filter_jpeg_quality $quality;
            error_page 415 = @empty;
        }

        location @empty {
            empty_gif;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;
    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
#    server {
#
#        listen       443;
#        server_name  localhost;
#
#        ssl                  on;
#				# change this files for live env. 
#        #ssl_certificate      /usr/local/nginx/conf/img03.pem;
#        #ssl_certificate      /usr/local/nginx/conf/img03.pem;
#        ssl_certificate_key  /usr/local/nginx/conf/cert.pem
#        ssl_certificate_key  /usr/local/nginx/conf/csr.pem
#
#        ssl_session_timeout  5m;
#
#        ssl_protocols  SSLv2 SSLv3 TLSv1;
#        ssl_ciphers  HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers   on;
#
#        location / {
#            root   html;
#            index  index.html index.htm;
#        }
#
#        location ~ /trade/.*\.jpg$ {
#
#            rewrite ^/trade/(img[0-9]*)/(cars)/([0-9]*)/([0-9]*)/japan(.*)/(.*)/([0-9]*.\.jpg)$ /trade/$1/$2/$3/$4/$7;
#            rewrite ^/trade/(img[0-9]*)/(cars|motorcycles)/([0-9]*)/([0-9]*)/(.*)/([0-9]*.\.jpg)$ /trade/$1/$2/$3/$4/$6;
#
#            if ($query_string ~ .*dummy=.*) {
#                break;
#            }
#
#            if ($query_string ~ .*=.*) {
#              rewrite ^/trade/(.*\.jpg)$ /image_filter/$1 last;
#            }
#        }
#
#        location ~ ^/image_filter/(.*\.jpg)$ {
#            internal;
#
#            set $file $1;
#            set $width 150;
#            set $height 150;
#            set $quality 75;
#
#            if ($arg_width ~ (\d*)) {
#                set $width $1;
#            }
#            if ($arg_height ~ (\d*)) {
#                set $height $1;
#            }
#            if ($arg_quality ~ (100|[1-9][0-9]|[1-9])) {
#                set $quality $1;
#            }
#
#            if ($arg_type = "resize") {
#                rewrite ^ /resize last;
#            }
#
#            rewrite ^ /crop last;
#        }
#
#        location /resize {
#            internal;
#            rewrite ^ /trade/$file break;
#            image_filter  resize  $width $height;
#            image_filter_jpeg_quality $quality;
#            error_page 415 = @empty;
#        }
#
#        location /crop {
#            internal;
#            rewrite ^ /trade/$file break;
#            image_filter  crop  $width $height;
#            image_filter_jpeg_quality $quality;
#            error_page 415 = @empty;
#        }
#
#        location @empty {
#            empty_gif;
#        }
#
#    }
#
}
